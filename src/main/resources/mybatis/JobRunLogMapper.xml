<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qqw.demo.quartz.mapper.JobRunLogMapper">
  <resultMap id="BaseResultMap" type="com.qqw.demo.quartz.entity.JobRunLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="job_id" jdbcType="BIGINT" property="jobId" />
    <result column="job_result_code" jdbcType="INTEGER" property="jobResultCode" />
    <result column="job_result_msg" jdbcType="VARCHAR" property="jobResultMsg" />
    <result column="job_result_data" jdbcType="VARCHAR" property="jobResultData" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>
  <sql id="Base_Column_List">
    id, job_id, job_result_code, job_result_msg, job_result_data, create_time, create_user, 
    update_time, update_user
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from job_run_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from job_run_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.qqw.demo.quartz.entity.JobRunLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into job_run_log (job_id, job_result_code, job_result_msg, 
      job_result_data, create_time, create_user, 
      update_time, update_user)
    values (#{jobId,jdbcType=BIGINT}, #{jobResultCode,jdbcType=INTEGER}, #{jobResultMsg,jdbcType=VARCHAR}, 
      #{jobResultData,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qqw.demo.quartz.entity.JobRunLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into job_run_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jobId != null">
        job_id,
      </if>
      <if test="jobResultCode != null">
        job_result_code,
      </if>
      <if test="jobResultMsg != null">
        job_result_msg,
      </if>
      <if test="jobResultData != null">
        job_result_data,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jobId != null">
        #{jobId,jdbcType=BIGINT},
      </if>
      <if test="jobResultCode != null">
        #{jobResultCode,jdbcType=INTEGER},
      </if>
      <if test="jobResultMsg != null">
        #{jobResultMsg,jdbcType=VARCHAR},
      </if>
      <if test="jobResultData != null">
        #{jobResultData,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qqw.demo.quartz.entity.JobRunLog">
    update job_run_log
    <set>
      <if test="jobId != null">
        job_id = #{jobId,jdbcType=BIGINT},
      </if>
      <if test="jobResultCode != null">
        job_result_code = #{jobResultCode,jdbcType=INTEGER},
      </if>
      <if test="jobResultMsg != null">
        job_result_msg = #{jobResultMsg,jdbcType=VARCHAR},
      </if>
      <if test="jobResultData != null">
        job_result_data = #{jobResultData,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qqw.demo.quartz.entity.JobRunLog">
    update job_run_log
    set job_id = #{jobId,jdbcType=BIGINT},
      job_result_code = #{jobResultCode,jdbcType=INTEGER},
      job_result_msg = #{jobResultMsg,jdbcType=VARCHAR},
      job_result_data = #{jobResultData,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>