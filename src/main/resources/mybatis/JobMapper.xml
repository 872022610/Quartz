<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qqw.demo.quartz.mapper.JobMapper">
  <resultMap id="BaseResultMap" type="com.qqw.demo.quartz.entity.Job">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="job_class_package_path" jdbcType="VARCHAR" property="jobClassPackagePath" />
    <result column="job_class_name" jdbcType="VARCHAR" property="jobClassName" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="job_group_name" jdbcType="VARCHAR" property="jobGroupName" />
    <result column="trigger_name" jdbcType="VARCHAR" property="triggerName" />
    <result column="trigger_group_name" jdbcType="VARCHAR" property="triggerGroupName" />
    <result column="trigger_corn" jdbcType="VARCHAR" property="triggerCorn" />
    <result column="job_start_time" jdbcType="TIMESTAMP" property="jobStartTime" />
    <result column="job_end_time" jdbcType="TIMESTAMP" property="jobEndTime" />
    <result column="job_status" jdbcType="INTEGER" property="jobStatus" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>
  <sql id="Base_Column_List">
    id, job_class_package_path, job_class_name, job_name, job_group_name, trigger_name, 
    trigger_group_name, trigger_corn, job_start_time, job_end_time, job_status, is_deleted, 
    create_time, create_user, update_time, update_user
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from job
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from job
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.qqw.demo.quartz.entity.Job">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into job (job_class_package_path, job_class_name, 
      job_name, job_group_name, trigger_name, 
      trigger_group_name, trigger_corn, job_start_time, 
      job_end_time, job_status, is_deleted, 
      create_time, create_user, update_time, 
      update_user)
    values (#{jobClassPackagePath,jdbcType=VARCHAR}, #{jobClassName,jdbcType=VARCHAR}, 
      #{jobName,jdbcType=VARCHAR}, #{jobGroupName,jdbcType=VARCHAR}, #{triggerName,jdbcType=VARCHAR}, 
      #{triggerGroupName,jdbcType=VARCHAR}, #{triggerCorn,jdbcType=VARCHAR}, #{jobStartTime,jdbcType=TIMESTAMP}, 
      #{jobEndTime,jdbcType=TIMESTAMP}, #{jobStatus,jdbcType=INTEGER}, #{isDeleted,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qqw.demo.quartz.entity.Job">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into job
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jobClassPackagePath != null">
        job_class_package_path,
      </if>
      <if test="jobClassName != null">
        job_class_name,
      </if>
      <if test="jobName != null">
        job_name,
      </if>
      <if test="jobGroupName != null">
        job_group_name,
      </if>
      <if test="triggerName != null">
        trigger_name,
      </if>
      <if test="triggerGroupName != null">
        trigger_group_name,
      </if>
      <if test="triggerCorn != null">
        trigger_corn,
      </if>
      <if test="jobStartTime != null">
        job_start_time,
      </if>
      <if test="jobEndTime != null">
        job_end_time,
      </if>
      <if test="jobStatus != null">
        job_status,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jobClassPackagePath != null">
        #{jobClassPackagePath,jdbcType=VARCHAR},
      </if>
      <if test="jobClassName != null">
        #{jobClassName,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroupName != null">
        #{jobGroupName,jdbcType=VARCHAR},
      </if>
      <if test="triggerName != null">
        #{triggerName,jdbcType=VARCHAR},
      </if>
      <if test="triggerGroupName != null">
        #{triggerGroupName,jdbcType=VARCHAR},
      </if>
      <if test="triggerCorn != null">
        #{triggerCorn,jdbcType=VARCHAR},
      </if>
      <if test="jobStartTime != null">
        #{jobStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="jobEndTime != null">
        #{jobEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="jobStatus != null">
        #{jobStatus,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qqw.demo.quartz.entity.Job">
    update job
    <set>
      <if test="jobClassPackagePath != null">
        job_class_package_path = #{jobClassPackagePath,jdbcType=VARCHAR},
      </if>
      <if test="jobClassName != null">
        job_class_name = #{jobClassName,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null">
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroupName != null">
        job_group_name = #{jobGroupName,jdbcType=VARCHAR},
      </if>
      <if test="triggerName != null">
        trigger_name = #{triggerName,jdbcType=VARCHAR},
      </if>
      <if test="triggerGroupName != null">
        trigger_group_name = #{triggerGroupName,jdbcType=VARCHAR},
      </if>
      <if test="triggerCorn != null">
        trigger_corn = #{triggerCorn,jdbcType=VARCHAR},
      </if>
      <if test="jobStartTime != null">
        job_start_time = #{jobStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="jobEndTime != null">
        job_end_time = #{jobEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="jobStatus != null">
        job_status = #{jobStatus,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qqw.demo.quartz.entity.Job">
    update job
    set job_class_package_path = #{jobClassPackagePath,jdbcType=VARCHAR},
      job_class_name = #{jobClassName,jdbcType=VARCHAR},
      job_name = #{jobName,jdbcType=VARCHAR},
      job_group_name = #{jobGroupName,jdbcType=VARCHAR},
      trigger_name = #{triggerName,jdbcType=VARCHAR},
      trigger_group_name = #{triggerGroupName,jdbcType=VARCHAR},
      trigger_corn = #{triggerCorn,jdbcType=VARCHAR},
      job_start_time = #{jobStartTime,jdbcType=TIMESTAMP},
      job_end_time = #{jobEndTime,jdbcType=TIMESTAMP},
      job_status = #{jobStatus,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>